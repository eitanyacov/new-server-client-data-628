import React, { useState, useEffect, useContext, useRef } from "react";
// import CircularProgress from '@mui/material/CircularProgress';
import LinearProgress from '@mui/material/LinearProgress';
import PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';
import LocalPrintshopIcon from '@mui/icons-material/LocalPrintshop';
import { ThemeContext } from '../App';
import SwitchThemeYear from "../components/SwitchThemeYear";
import axios from "axios";
import { useQuery } from 'react-query'
import jsPDF from 'jspdf'
// import autoTable from 'jspdf-autotable'
// import ReactToPrint  from 'react-to-print';



const YearlyReports = () => {
  // const [user, setUser] = useState({});
  const [isSSR, setIsSSR] = useState(true);
  const [isSSRE, setIsSSRE] = useState(true);
  const [alert, setAlert] = useState(true);
  // const [flag, setFlag] = useState(false);
  // const [year, setYear] = useState();
  const [windowHeight, setWindowHeight] = useState(0);
  const [windowWidth, setWindowWidth] = useState(0);

  const [action, setAction] = useState(false);

  
  const [januarIncome, setJanuarIncome] = useState();
  const [februaryIncome, setFebruaryIncome] = useState();
  const [marchIncome, setMarchIncome] = useState();
  const [aprilIncome, setAprilIncome] = useState();
  const [mayIncome, setMayIncome] = useState();
  const [juneIncome, setJuneIncome] = useState();
  const [julyIncome, setJulyIncome] = useState();
  const [augustIncome, setAugustIncome] = useState();
  const [septemberIncome, setSeptemberIncome] = useState();
  const [octoberIncome, setOctoberIncome] = useState();
  const [novemberIncome, setNovemberIncome] = useState();
  const [decemberIncome, setDecemberIncome] = useState();

  const [januarSupplierWaresOutcome, setJanuarSupplierWaresOutcome] = useState();
  const [februarySupplierWaresOutcome, setFebruarySupplierWaresOutcome] = useState();
  const [marchSupplierWaresOutcome, setMarchSupplierWaresOutcome] = useState();
  const [aprilSupplierWaresOutcome, setAprilSupplierWaresOutcome] = useState();
  const [maySupplierWaresOutcome, setMaySupplierWaresOutcome] = useState();
  const [juneSupplierWaresOutcome, setJuneSupplierWaresOutcome] = useState();
  const [julySupplierWaresOutcome, setJulySupplierWaresOutcome] = useState();
  const [augustSupplierWaresOutcome, setAugustSupplierWaresOutcome] = useState();
  const [septemberSupplierWaresOutcome, setSeptemberSupplierWaresOutcome] = useState();
  const [octoberSupplierWaresOutcome, setOctoberSupplierWaresOutcome] = useState();
  const [novemberSupplierWaresOutcome, setNovemberSupplierWaresOutcome] = useState();
  const [decemberSupplierWaresOutcome, setDecemberSupplierWaresOutcome] = useState();


  const [januarSalaries, setJanuarSalaries] = useState();
  const [februarySalaries, setFebruarySalaries] = useState();
  const [marchSalaries, setMarchSalaries] = useState();
  const [aprilSalaries, setAprilSalaries] = useState();
  const [maySalaries, setMaySalaries] = useState();
  const [juneSalaries, setJuneSalaries] = useState();
  const [julySalaries, setJulySalaries] = useState();
  const [augustSalaries, setAugustSalaries] = useState();
  const [septemberSalaries, setSeptemberSalaries] = useState();
  const [octoberSalaries, setOctoberSalaries] = useState();
  const [novemberSalaries, setNovemberSalaries] = useState();
  const [decemberSalaries, setDecemberSalaries] = useState();

  const [januarMonthTaxInvoicesIsTazrim, setJanuarMonthTaxInvoicesIsTazrim] = useState();
  const [februaryMonthTaxInvoicesIsTazrim, setFebruaryMonthTaxInvoicesIsTazrim] = useState();
  const [marchMonthTaxInvoicesIsTazrim, setMarchMonthTaxInvoicesIsTazrim] = useState();
  const [aprilMonthTaxInvoicesIsTazrim, setAprilMonthTaxInvoicesIsTazrim] = useState();
  const [mayMonthTaxInvoicesIsTazrim, setMayMonthTaxInvoicesIsTazrim] = useState();
  const [juneMonthTaxInvoicesIsTazrim, setJuneMonthTaxInvoicesIsTazrim] = useState();
  const [julyMonthTaxInvoicesIsTazrim, setJulyMonthTaxInvoicesIsTazrim] = useState();
  const [augustrMonthTaxInvoicesIsTazrim, setAugustMonthTaxInvoicesIsTazrim] = useState();
  const [septemberMonthTaxInvoicesIsTazrim, setSeptemberMonthTaxInvoicesIsTazrim] = useState();
  const [octoberMonthTaxInvoicesIsTazrim, setOctoberMonthTaxInvoicesIsTazrim] = useState();
  const [novemberMonthTaxInvoicesIsTazrim, setNovemberMonthTaxInvoicesIsTazrim] = useState();
  const [decemberMonthTaxInvoicesIsTazrim, setDecemberMonthTaxInvoicesIsTazrim] = useState();

  const [januarSupplierChangeableOutcom, setJanuarSupplierChangeableOutcome] = useState();
  const [februarySupplierChangeableOutcom, setFebruarySupplierChangeableOutcome] = useState();
  const [marchSupplierChangeableOutcom, setMarchSupplierChangeableOutcome] = useState();
  const [aprilSupplierChangeableOutcom, setAprilSupplierChangeableOutcome] = useState();
  const [maySupplierChangeableOutcom, setMaySupplierChangeableOutcome] = useState();
  const [juneSupplierChangeableOutcom, setJuneSupplierChangeableOutcome] = useState();
  const [julySupplierChangeableOutcom, setJulySupplierChangeableOutcome] = useState();
  const [augustSupplierChangeableOutcom, setAugustSupplierChangeableOutcome] = useState();
  const [septemberSupplierChangeableOutcom, setSeptemberSupplierChangeableOutcome] = useState();
  const [octoberSupplierChangeableOutcom, setOctoberSupplierChangeableOutcome] = useState();
  const [novemberSupplierChangeableOutcom, setNovemberSupplierChangeableOutcome] = useState();
  const [decemberSupplierChangeableOutcom, setDecemberSupplierChangeableOutcome] = useState();
  
  const [januarSupplierPermanentOutcome, setJanuarSupplierPermanentOutcome] = useState();
  const [februarySupplierPermanentOutcome, setFebruarySupplierPermanentOutcome] = useState();
  const [marchSupplierPermanentOutcome, setMarchSupplierPermanentOutcome] = useState();
  const [aprilSupplierPermanentOutcome, setAprilSupplierPermanentOutcome] = useState();
  const [maySupplierPermanentOutcome, setMaySupplierPermanentOutcome] = useState();
  const [juneSupplierPermanentOutcome, setJuneSupplierPermanentOutcome] = useState();
  const [julySupplierPermanentOutcome, setJulySupplierPermanentOutcome] = useState();
  const [augustSupplierPermanentOutcome, setAugustSupplierPermanentOutcome] = useState();
  const [septemberSupplierPermanentOutcome, setSeptemberSupplierPermanentOutcome] = useState();
  const [octoberSupplierPermanentOutcome, setOctoberSupplierPermanentOutcome] = useState();
  const [novemberSupplierPermanentOutcome, setNovemberSupplierPermanentOutcome] = useState();
  const [decemberSupplierPermanentOutcome, setDecemberSupplierPermanentOutcome] = useState();
  


  const [januarGolmiProfit, setJanuarGolmiProfit]= useState()
  const [februaryGolmiProfit, setFebruaryGolmiProfit]= useState()
  const [marchGolmiProfit, setMarchGolmiProfit]= useState()
  const [aprilGolmiProfit, setAprilGolmiProfit]= useState()
  const [mayGolmiProfit, setMayGolmiProfit]= useState()
  const [juneGolmiProfit, setJuneGolmiProfit]= useState()
  const [julyGolmiProfit, setJulyGolmiProfit]= useState()
  const [augustGolmiProfit, setAugustGolmiProfit]= useState()
  const [septemberGolmiProfit, setSeptemberGolmiProfit]= useState()
  const [octoberGolmiProfit, setOctoberGolmiProfit]= useState()
  const [novemberGolmiProfit, setNovemberGolmiProfit]= useState()
  const [decemberGolmiProfit, setDecemberGolmiProfit]= useState()
  

  const [januarTifuliProfit, setJanuarTifuliProfit] = useState();
  const [februaryTifuliProfit, setFebruaryTifuliProfit] = useState();
  const [marchTifuliProfit, setMarchTifuliProfit] = useState();
  const [aprilTifuliProfit, setAprilTifuliProfit] = useState();
  const [mayTifuliProfit, setMayTifuliProfit] = useState();
  const [juneTifuliProfit, setJuneTifuliProfit] = useState();
  const [julyTifuliProfit, setJulyTifuliProfit] = useState();
  const [augustTifuliProfit, setAugustTifuliProfit] = useState();
  const [septemberTifuliProfit, setSeptemberTifuliProfit] = useState();
  const [octoberTifuliProfit, setOctoberTifuliProfit] = useState();
  const [novemberTifuliProfit, setNovemberTifuliProfit] = useState();
  const [decemberTifuliProfit, setDecemberTifuliProfit] = useState();


  const [januarProfit, setJanuarProfit] = useState();
  const [februaryProfit, setFebruaryProfit] = useState();
  const [marchProfit, setMarchProfit] = useState();
  const [aprilProfit, setAprilProfit] = useState();
  const [mayProfit, setMayProfit] = useState();
  const [juneProfit, setJuneProfit] = useState();
  const [julyProfit, setJulyProfit] = useState();
  const [augustProfit, setAugustProfit] = useState();
  const [septemberProfit, setSeptemberProfit] = useState();
  const [octoberProfit, setOctoberProfit] = useState();
  const [novemberProfit, setNovemberProfit] = useState();
  const [decemberProfit, setDecemberProfit] = useState();


  const [januarSupplierOutcomeVat, setJanuarSupplierOutcomeVat] = useState();
  const [februarySupplierOutcomeVat, setFebruarySupplierOutcomeVat] = useState();
  const [marchSupplierOutcomeVat, setMarchSupplierOutcomeVat] = useState();
  const [aprilSupplierOutcomeVat, setAprilSupplierOutcomeVat] = useState();
  const [maySupplierOutcomeVat, setMaySupplierOutcomeVat] = useState();
  const [juneSupplierOutcomeVat, setJuneSupplierOutcomeVat] = useState();
  const [julySupplierOutcomeVat, setJulySupplierOutcomeVat] = useState();
  const [augustSupplierOutcomeVat, setAugustSupplierOutcomeVat] = useState();
  const [septemberSupplierOutcomeVat, setSeptemberSupplierOutcomeVat] = useState();
  const [octoberSupplierOutcomeVat, setOctoberSupplierOutcomeVat] = useState();
  const [novemberSupplierOutcomeVat, setNovemberSupplierOutcomeVat] = useState();
  const [decemberSupplierOutcomeVat, setDecemberSupplierOutcomeVat] = useState();

  


  const componentRef = useRef();
  const screen = window.screen.availWidth
  // const screenHeight = window.screen.availHeight

  const res = localStorage.getItem("user")
  const result = JSON.parse(res)

  const { yearState, year, hebrew, globalTheme } = useContext(ThemeContext)
 
  

  const columnsx = [
    { title: "רווח".split('').reverse().join(''), field: "totalProfit", },
    { title: 'מע"מ'.split('').reverse().join(''), field: "vat", },
    { title: "רווח תפעולי".split('').reverse().join(''), field: "profitTifuli", type: "numeric" },
    { title: "רווח גולמי".split('').reverse().join(''), field: 'profitGolmi', type: "numeric" },
    { title: "הכנסות".split('').reverse().join(''), field: 'totalIncome', type: "numeric" },
    { title: "חשבוניות".split('').reverse().join(''), field: 'taxInvoices', type: "numeric" },
    { title: 'דו"ח יומי'.split('').reverse().join(''), field: 'income', type: "numeric" },
    { title: "הוצאות".split('').reverse().join(''), field: 'totaloutcome', type: "numeric" },
    { title: "משכורות".split('').reverse().join(''), field: 'salaries', type: "numeric" },
    { title: "קבועות".split('').reverse().join(''), field: 'permanentOutcome', type: "numeric" },
    { title: "משתנות".split('').reverse().join(''), field: 'changeableOutcome', type: "numeric" },
    { title: "סחורה".split('').reverse().join(''), field: 'supplierswaresoutcome', type: "numeric" },
    { title: "חודש".split('').reverse().join(''), field: 'month', type: "numeric" },
    
   ]


   const columnsy = [
    { title: "Month", field: 'month', type: "numeric" },
    { title: "commodity", field: 'supplierswaresoutcome', type: "numeric" },
    { title: "changeable", field: 'changeableOutcome', type: "numeric" },
    { title: "permanent", field: 'permanentOutcome', type: "numeric" },
    { title: "salaries", field: 'salaries', type: "numeric" },
    { title: "total-outcome", field: 'totaloutcome', type: "numeric" },
    { title: "daily-income", field: 'income', type: "numeric" },
    { title: "invoices", field: 'taxInvoices', type: "numeric" },
    { title: "total-income", field: 'totalIncome', type: "numeric" },
    { title: "gross profit", field: 'profitGolmi', type: "numeric" },
    { title: "operating profit", field: "profitTifuli", type: "numeric" },
    { title: "vat", field: "vat", },
    { title: "profit", field: "totalProfit", },
    
   ]
  
  const doc = new jsPDF('landscape');



   var font = '';

  const printPdf = () => {
    doc.addFileToVFS('David.ttf', font);
    doc.addFont('David.ttf', 'David', 'normal');
    doc.setFont('David');
    const text = 'דו"ח שנתי' + ' ' + year
    const rev = text.split('').reverse().join('');
    doc.text(rev, 20,10, {styles: {font: "David" }})
    doc.autoTable({
      styles: {font: "David", align: 'right', isSymmetricSwapping: true, isInputVisual: true, isOutputVisual: false},
      theme: "grid",
      columns: columnsx.map(col => ({ ...col, dataKey: col.field })),
      body: reports,
    })
    doc.save('table.pdf')
  }

  const printPdf2 = () => {
    // doc.addFileToVFS('David.ttf', font);
    // doc.addFont('David.ttf', 'David', 'normal');
    // doc.setFont('David');
    // const text = 'דו"ח שנתי' + ' ' + year
    // const rev = text.split('').reverse().join('');
    // doc.text(rev, 20,10, {styles: {font: "David" }})
    doc.text("annual report " + year, 20, 10)
    doc.autoTable({
      theme: "grid",
      columns: columnsy.map(col => ({ ...col, dataKey: col.field })),
      body: reports,
    })
    doc.save('table.pdf')
  }

  let resizeWindow = () => {
    setWindowWidth(window.innerWidth);
    setWindowHeight(window.innerHeight);
  };

  useEffect(() => {
    resizeWindow();
    console.log(window.innerHeight)
    window.addEventListener("resize", resizeWindow);
    return () => window.removeEventListener("resize", resizeWindow);  
  }, [windowHeight, window.innerHeight, windowWidth, window.innerWidth]);


  useEffect(() => {
    setTimeout(() => {
      setIsSSR(false);
    }, 500)
    
  }, [isSSR]);

  useEffect(() => {
    setTimeout(() => {
      setIsSSRE(false);
    }, 1200)
  }, [isSSRE]);

  // this function is for yearly-reports for calculate monthly-vat
const getOutcomeForVat = () => {
  const id = result?.id
  return axios.get(`https://nartina.com/api/user/total-monthly-outcome-with-vat-array/${id}/${year}`)
}

const {data: outcomeAllVat, refetch: ooo} = useQuery('outcome-data-all-vat', getOutcomeForVat,
  {
    refetchOnMount: false,
    refetchOnWindowFocus: false
   
  })


  
const getIncomesData = () => {
  const id = result?.id
  return axios.get(`https://nartina.com/api/user/daily-income-by-year-array/${id}/${year}`)
}

const {data: incomesAll, refetch: www} = useQuery('incomes-data-all', getIncomesData,
  {
    refetchOnMount: false,
    refetchOnWindowFocus: false
   
  })


  const getSalariesData = () => {
    const id = result?.id
    return axios.get(`https://nartina.com/api/user/salary-by-year-array/${id}/${year}`)
  }
  
  const {data: salariesAll, refetch: sss} = useQuery('salaries-data-all', getSalariesData,
    {
      refetchOnMount: false,
      refetchOnWindowFocus: false
     
    })


    const getWaresData = () => {
      const id = result?.id
      return axios.get(`https://nartina.com/api/user/wares-by-year-array/${id}/${year}`)
    }
    
    const {data: waresAll, refetch: rrr} = useQuery('wares-data-all', getWaresData,
      {
        refetchOnMount: false,
        refetchOnWindowFocus: false
       
      })


      const getPermanentData = () => {
        const id = result?.id
        return axios.get(`https://nartina.com/api/user/permanent-by-year-array/${id}/${year}`)
      }
      
      const {data: permanentAll, refetch: ppp} = useQuery('permanent-data-all', getPermanentData,
        {
          refetchOnMount: false,
          refetchOnWindowFocus: false
         
        })


        const getChangeableData = () => {
          const id = result?.id
          return axios.get(`https://nartina.com/api/user/changeable-by-year-array/${id}/${year}`)
        }
        
        const {data: changableAll, refetch: fff} = useQuery('changable-data-all', getChangeableData,
          {
            refetchOnMount: false,
            refetchOnWindowFocus: false
           
          })

          const getReceiptsData = () => {
            const id = result?.id
            return axios.get(`https://nartina.com/api/user/receipts-by-year-array/${id}/${year}`)
          }
          
          const {data: receiptsAll, refetch: ttt} = useQuery('receipts-data-all', getReceiptsData,
            {
              refetchOnMount: false,
              refetchOnWindowFocus: false
             
            })


//this function is for yearly-reports to calculate monthly vat
  useEffect(()=> {
    setJanuarSupplierOutcomeVat(outcomeAllVat?.data[0])
    setFebruarySupplierOutcomeVat(outcomeAllVat?.data[1])
    setMarchSupplierOutcomeVat(outcomeAllVat?.data[2])
    setAprilSupplierOutcomeVat(outcomeAllVat?.data[3])
    setMaySupplierOutcomeVat(outcomeAllVat?.data[4])
    setJuneSupplierOutcomeVat(outcomeAllVat?.data[5])
    setJulySupplierOutcomeVat(outcomeAllVat?.data[6])
    setAugustSupplierOutcomeVat(outcomeAllVat?.data[7])
    setSeptemberSupplierOutcomeVat(outcomeAllVat?.data[8])
    setOctoberSupplierOutcomeVat(outcomeAllVat?.data[9])
    setNovemberSupplierOutcomeVat(outcomeAllVat?.data[10])
    setDecemberSupplierOutcomeVat(outcomeAllVat?.data[11])
  },[outcomeAllVat, year])

           


            useEffect(()=> {
              setJanuarIncome(incomesAll?.data[0])
              setFebruaryIncome(incomesAll?.data[1])
              setMarchIncome(incomesAll?.data[2])
              setAprilIncome(incomesAll?.data[3])
              setMayIncome(incomesAll?.data[4])
              setJuneIncome(incomesAll?.data[5])
              setJulyIncome(incomesAll?.data[6])
              setAugustIncome(incomesAll?.data[7])
              setSeptemberIncome(incomesAll?.data[8])
              setOctoberIncome(incomesAll?.data[9])
              setNovemberIncome(incomesAll?.data[10])
              setDecemberIncome(incomesAll?.data[11])
            },[incomesAll, year])
          
            useEffect(()=> {
              setJanuarMonthTaxInvoicesIsTazrim(receiptsAll?.data[0])
              setFebruaryMonthTaxInvoicesIsTazrim(receiptsAll?.data[1])
              setMarchMonthTaxInvoicesIsTazrim(receiptsAll?.data[2])
              setAprilMonthTaxInvoicesIsTazrim(receiptsAll?.data[3])
              setMayMonthTaxInvoicesIsTazrim(receiptsAll?.data[4])
              setJuneMonthTaxInvoicesIsTazrim(receiptsAll?.data[5])
              setJulyMonthTaxInvoicesIsTazrim(receiptsAll?.data[6])
              setAugustMonthTaxInvoicesIsTazrim(receiptsAll?.data[7])
              setSeptemberMonthTaxInvoicesIsTazrim(receiptsAll?.data[8])
              setOctoberMonthTaxInvoicesIsTazrim(receiptsAll?.data[9])
              setNovemberMonthTaxInvoicesIsTazrim(receiptsAll?.data[10])
              setDecemberMonthTaxInvoicesIsTazrim(receiptsAll?.data[11])
            },[receiptsAll, year])
          
            useEffect(()=> {
              setJanuarSalaries(salariesAll?.data[0])
              setFebruarySalaries(salariesAll?.data[1])
              setMarchSalaries(salariesAll?.data[2])
              setAprilSalaries(salariesAll?.data[3])
              setMaySalaries(salariesAll?.data[4])
              setJuneSalaries(salariesAll?.data[5])
              setJulySalaries(salariesAll?.data[6])
              setAugustSalaries(salariesAll?.data[7])
              setSeptemberSalaries(salariesAll?.data[8])
              setOctoberSalaries(salariesAll?.data[9])
              setNovemberSalaries(salariesAll?.data[10])
              setDecemberSalaries(salariesAll?.data[11])
            },[salariesAll, year])
          
            useEffect(()=> {
              setJanuarSupplierWaresOutcome(waresAll?.data[0])
              setFebruarySupplierWaresOutcome(waresAll?.data[1])
              setMarchSupplierWaresOutcome(waresAll?.data[2])
              setAprilSupplierWaresOutcome(waresAll?.data[3])
              setMaySupplierWaresOutcome(waresAll?.data[4])
              setJuneSupplierWaresOutcome(waresAll?.data[5])
              setJulySupplierWaresOutcome(waresAll?.data[6])
              setAugustSupplierWaresOutcome(waresAll?.data[7])
              setSeptemberSupplierWaresOutcome(waresAll?.data[8])
              setOctoberSupplierWaresOutcome(waresAll?.data[9])
              setNovemberSupplierWaresOutcome(waresAll?.data[10])
              setDecemberSupplierWaresOutcome(waresAll?.data[11])
            },[waresAll, year])
          
            useEffect(()=> {
              setJanuarSupplierPermanentOutcome(permanentAll?.data[0])
              setFebruarySupplierPermanentOutcome(permanentAll?.data[1])
              setMarchSupplierPermanentOutcome(permanentAll?.data[2])
              setAprilSupplierPermanentOutcome(permanentAll?.data[3])
              setMaySupplierPermanentOutcome(permanentAll?.data[4])
              setJuneSupplierPermanentOutcome(permanentAll?.data[5])
              setJulySupplierPermanentOutcome(permanentAll?.data[6])
              setAugustSupplierPermanentOutcome(permanentAll?.data[7])
              setSeptemberSupplierPermanentOutcome(permanentAll?.data[8])
              setOctoberSupplierPermanentOutcome(permanentAll?.data[9])
              setNovemberSupplierPermanentOutcome(permanentAll?.data[10])
              setDecemberSupplierPermanentOutcome(permanentAll?.data[11])
            },[permanentAll, year])
          
          
            useEffect(()=> {
              setJanuarSupplierChangeableOutcome(changableAll?.data[0])
              setFebruarySupplierChangeableOutcome(changableAll?.data[1])
              setMarchSupplierChangeableOutcome(changableAll?.data[2])
              setAprilSupplierChangeableOutcome(changableAll?.data[3])
              setMaySupplierChangeableOutcome(changableAll?.data[4])
              setJuneSupplierChangeableOutcome(changableAll?.data[5])
              setJulySupplierChangeableOutcome(changableAll?.data[6])
              setAugustSupplierChangeableOutcome(changableAll?.data[7])
              setSeptemberSupplierChangeableOutcome(changableAll?.data[8])
              setOctoberSupplierChangeableOutcome(changableAll?.data[9])
              setNovemberSupplierChangeableOutcome(changableAll?.data[10])
              setDecemberSupplierChangeableOutcome(changableAll?.data[11])
            },[changableAll, year])


            const refetchAll = () => {
              www()
              sss()
              rrr()
              ppp()
              fff()
              ttt()
              ooo()
            }

 



  useEffect(()=> {
    setJanuarGolmiProfit(((Math.round(januarIncome) + (januarMonthTaxInvoicesIsTazrim != null ? januarMonthTaxInvoicesIsTazrim : 0)) - januarSupplierWaresOutcome) / (januarIncome + (januarMonthTaxInvoicesIsTazrim != null ? januarMonthTaxInvoicesIsTazrim : 0)))
}, [januarGolmiProfit, januarIncome, januarSupplierWaresOutcome, januarMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setFebruaryGolmiProfit(((Math.round(februaryIncome) + (februaryMonthTaxInvoicesIsTazrim != null ? februaryMonthTaxInvoicesIsTazrim : 0)) - februarySupplierWaresOutcome) / (februaryIncome + (februaryMonthTaxInvoicesIsTazrim != null ? februaryMonthTaxInvoicesIsTazrim : 0)))
}, [februaryGolmiProfit, februaryIncome, februarySupplierWaresOutcome, februaryMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setMarchGolmiProfit(((Math.round(marchIncome) + (marchMonthTaxInvoicesIsTazrim != null ? marchMonthTaxInvoicesIsTazrim : 0)) - marchSupplierWaresOutcome) / (marchIncome + (marchMonthTaxInvoicesIsTazrim != null ? marchMonthTaxInvoicesIsTazrim : 0)))
}, [marchGolmiProfit, marchIncome, marchSupplierWaresOutcome, marchMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setAprilGolmiProfit(((Math.round(aprilIncome) + (aprilMonthTaxInvoicesIsTazrim != null ? aprilMonthTaxInvoicesIsTazrim : 0)) - aprilSupplierWaresOutcome) / (aprilIncome + (aprilMonthTaxInvoicesIsTazrim != null ? aprilMonthTaxInvoicesIsTazrim : 0)))
}, [aprilGolmiProfit, aprilIncome, aprilSupplierWaresOutcome, aprilMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setMayGolmiProfit(((Math.round(mayIncome) + (mayMonthTaxInvoicesIsTazrim != null ? mayMonthTaxInvoicesIsTazrim : 0)) - maySupplierWaresOutcome) / (mayIncome + (mayMonthTaxInvoicesIsTazrim != null ? mayMonthTaxInvoicesIsTazrim : 0)))
}, [mayGolmiProfit, mayIncome, maySupplierWaresOutcome, mayMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
      setJuneGolmiProfit(((Math.round(juneIncome) + (juneMonthTaxInvoicesIsTazrim != null ? juneMonthTaxInvoicesIsTazrim : 0)) - juneSupplierWaresOutcome) / (juneIncome + (juneMonthTaxInvoicesIsTazrim != null ? juneMonthTaxInvoicesIsTazrim : 0)))
  }, [juneGolmiProfit, juneIncome, juneSupplierWaresOutcome, juneMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setJulyGolmiProfit(((Math.round(julyIncome) + (julyMonthTaxInvoicesIsTazrim != null ? julyMonthTaxInvoicesIsTazrim : 0)) - julySupplierWaresOutcome) / (julyIncome + (julyMonthTaxInvoicesIsTazrim != null ? julyMonthTaxInvoicesIsTazrim : 0)))
}, [julyGolmiProfit, julyIncome, julySupplierWaresOutcome, julyMonthTaxInvoicesIsTazrim])

useEffect(()=> {
  setAugustGolmiProfit(((Math.round(augustIncome) + (augustrMonthTaxInvoicesIsTazrim != null ? augustrMonthTaxInvoicesIsTazrim : 0)) - augustSupplierWaresOutcome) / (augustIncome + (augustrMonthTaxInvoicesIsTazrim != null ? augustrMonthTaxInvoicesIsTazrim : 0)))
}, [augustGolmiProfit, augustIncome, augustSupplierWaresOutcome, augustrMonthTaxInvoicesIsTazrim])

useEffect(()=> {
  setSeptemberGolmiProfit(((Math.round(septemberIncome) + (septemberMonthTaxInvoicesIsTazrim != null ? septemberMonthTaxInvoicesIsTazrim : 0)) - septemberSupplierWaresOutcome) / (septemberIncome + (septemberMonthTaxInvoicesIsTazrim != null ? septemberMonthTaxInvoicesIsTazrim : 0)))
}, [septemberGolmiProfit, septemberIncome, septemberSupplierWaresOutcome, septemberMonthTaxInvoicesIsTazrim])

useEffect(()=> {
  setOctoberGolmiProfit(((Math.round(octoberIncome) + (octoberMonthTaxInvoicesIsTazrim != null ? octoberMonthTaxInvoicesIsTazrim : 0)) - octoberSupplierWaresOutcome) / (octoberIncome + (octoberMonthTaxInvoicesIsTazrim != null ? octoberMonthTaxInvoicesIsTazrim : 0)))
}, [octoberGolmiProfit, octoberIncome, octoberSupplierWaresOutcome, octoberMonthTaxInvoicesIsTazrim])

useEffect(()=> {
  setNovemberGolmiProfit(((Math.round(novemberIncome) + (novemberMonthTaxInvoicesIsTazrim != null ? novemberMonthTaxInvoicesIsTazrim : 0)) - novemberSupplierWaresOutcome) / (novemberIncome + (novemberMonthTaxInvoicesIsTazrim != null ? novemberMonthTaxInvoicesIsTazrim : 0)))
}, [novemberGolmiProfit, novemberIncome, novemberSupplierWaresOutcome, novemberMonthTaxInvoicesIsTazrim])

useEffect(()=> {
  setDecemberGolmiProfit(((Math.round(decemberIncome) + (decemberMonthTaxInvoicesIsTazrim != null ? decemberMonthTaxInvoicesIsTazrim : 0)) - decemberSupplierWaresOutcome) / (decemberIncome + (decemberMonthTaxInvoicesIsTazrim != null ? decemberMonthTaxInvoicesIsTazrim : 0)))
}, [decemberGolmiProfit, decemberIncome, decemberSupplierWaresOutcome, decemberMonthTaxInvoicesIsTazrim])



useEffect(()=> {
    setJanuarTifuliProfit(((Math.round(januarIncome) + (januarMonthTaxInvoicesIsTazrim != null ? januarMonthTaxInvoicesIsTazrim : 0)) - ((januarSupplierWaresOutcome + januarSupplierChangeableOutcom + januarSupplierPermanentOutcome) + januarSalaries)) / (januarIncome + (januarMonthTaxInvoicesIsTazrim != null ? januarMonthTaxInvoicesIsTazrim : 0)))
  }, [januarIncome, januarSupplierWaresOutcome, januarSupplierChangeableOutcom, januarSupplierPermanentOutcome, januarSalaries, januarMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setFebruaryTifuliProfit(((Math.round(februaryIncome) + (februaryMonthTaxInvoicesIsTazrim != null ? februaryMonthTaxInvoicesIsTazrim : 0)) - ((februarySupplierWaresOutcome + februarySupplierChangeableOutcom + februarySupplierPermanentOutcome) + februarySalaries)) / (februaryIncome + (februaryMonthTaxInvoicesIsTazrim != null ? februaryMonthTaxInvoicesIsTazrim : 0)))
  }, [februaryIncome, februarySupplierWaresOutcome, februarySupplierChangeableOutcom, februarySupplierPermanentOutcome, februarySalaries, februaryMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setMarchTifuliProfit(((Math.round(marchIncome) + (marchMonthTaxInvoicesIsTazrim != null ? marchMonthTaxInvoicesIsTazrim : 0)) - ((marchSupplierWaresOutcome + marchSupplierChangeableOutcom + marchSupplierPermanentOutcome) + marchSalaries)) / (marchIncome + (marchMonthTaxInvoicesIsTazrim != null ? marchMonthTaxInvoicesIsTazrim : 0)))
  }, [marchIncome, marchSupplierWaresOutcome, marchSupplierChangeableOutcom, marchSupplierPermanentOutcome, marchSalaries, marchMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setAprilTifuliProfit(((Math.round(aprilIncome) + (aprilMonthTaxInvoicesIsTazrim != null ? aprilMonthTaxInvoicesIsTazrim : 0)) - ((aprilSupplierWaresOutcome + aprilSupplierChangeableOutcom + aprilSupplierPermanentOutcome) + aprilSalaries)) / (aprilIncome + (aprilMonthTaxInvoicesIsTazrim != null ? aprilMonthTaxInvoicesIsTazrim : 0)))
  }, [aprilIncome, aprilSupplierWaresOutcome, aprilSupplierChangeableOutcom, aprilSupplierPermanentOutcome, aprilSalaries, aprilMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setMayTifuliProfit(((Math.round(mayIncome) + (mayMonthTaxInvoicesIsTazrim != null ? mayMonthTaxInvoicesIsTazrim : 0)) - ((maySupplierWaresOutcome + maySupplierChangeableOutcom + maySupplierPermanentOutcome) + maySalaries)) / (mayIncome + (mayMonthTaxInvoicesIsTazrim != null ? mayMonthTaxInvoicesIsTazrim : 0)))
  }, [mayIncome, maySupplierWaresOutcome, maySupplierChangeableOutcom, maySupplierPermanentOutcome, maySalaries, mayMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setJuneTifuliProfit(((Math.round(juneIncome) + (juneMonthTaxInvoicesIsTazrim != null ? juneMonthTaxInvoicesIsTazrim : 0)) - ((juneSupplierWaresOutcome + juneSupplierChangeableOutcom + juneSupplierPermanentOutcome) + juneSalaries)) / (juneIncome + (juneMonthTaxInvoicesIsTazrim != null ? juneMonthTaxInvoicesIsTazrim : 0)))
  }, [juneIncome, juneSupplierWaresOutcome, juneSupplierChangeableOutcom, juneSupplierPermanentOutcome, juneSalaries, juneMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setJulyTifuliProfit(((Math.round(julyIncome) + (julyMonthTaxInvoicesIsTazrim != null ? julyMonthTaxInvoicesIsTazrim : 0)) - ((julySupplierWaresOutcome + julySupplierChangeableOutcom + julySupplierPermanentOutcome) + julySalaries)) / (julyIncome + (julyMonthTaxInvoicesIsTazrim != null ? julyMonthTaxInvoicesIsTazrim : 0)))
  }, [julyIncome, julySupplierWaresOutcome, julySupplierChangeableOutcom, julySupplierPermanentOutcome, julySalaries, julyMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setAugustTifuliProfit(((Math.round(augustIncome) + (augustrMonthTaxInvoicesIsTazrim != null ? augustrMonthTaxInvoicesIsTazrim : 0)) - ((augustSupplierWaresOutcome + augustSupplierChangeableOutcom + augustSupplierPermanentOutcome) + augustSalaries)) / (augustIncome + (augustrMonthTaxInvoicesIsTazrim != null ? augustrMonthTaxInvoicesIsTazrim : 0)))
  }, [augustIncome, augustSupplierWaresOutcome, augustSupplierChangeableOutcom, augustSupplierPermanentOutcome, augustSalaries, augustrMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setSeptemberTifuliProfit(((Math.round(septemberIncome) + (septemberMonthTaxInvoicesIsTazrim != null ? septemberMonthTaxInvoicesIsTazrim : 0)) - ((septemberSupplierWaresOutcome + septemberSupplierChangeableOutcom + septemberSupplierPermanentOutcome) + septemberSalaries)) / (septemberIncome + (septemberMonthTaxInvoicesIsTazrim != null ? septemberMonthTaxInvoicesIsTazrim : 0)))
  }, [septemberIncome, septemberSupplierWaresOutcome, septemberSupplierChangeableOutcom, septemberSupplierPermanentOutcome, septemberSalaries, septemberMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setOctoberTifuliProfit(((Math.round(octoberIncome) + (octoberMonthTaxInvoicesIsTazrim != null ? octoberMonthTaxInvoicesIsTazrim : 0)) - ((octoberSupplierWaresOutcome + octoberSupplierChangeableOutcom + octoberSupplierPermanentOutcome) + octoberSalaries)) / (octoberIncome + (octoberMonthTaxInvoicesIsTazrim != null ? octoberMonthTaxInvoicesIsTazrim : 0)))
  }, [octoberIncome, octoberSupplierWaresOutcome, octoberSupplierChangeableOutcom, octoberSupplierPermanentOutcome, octoberSalaries, octoberMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setNovemberTifuliProfit(((Math.round(novemberIncome) + (novemberMonthTaxInvoicesIsTazrim != null ? novemberMonthTaxInvoicesIsTazrim : 0)) - ((novemberSupplierWaresOutcome + novemberSupplierChangeableOutcom + novemberSupplierPermanentOutcome) + novemberSalaries)) / (novemberIncome + (novemberMonthTaxInvoicesIsTazrim != null ? novemberMonthTaxInvoicesIsTazrim : 0)))
  }, [novemberIncome, novemberSupplierWaresOutcome, novemberSupplierChangeableOutcom, novemberSupplierPermanentOutcome, novemberSalaries, novemberMonthTaxInvoicesIsTazrim])

  useEffect(()=> {
    setDecemberTifuliProfit(((Math.round(decemberIncome) + (decemberMonthTaxInvoicesIsTazrim != null ? decemberMonthTaxInvoicesIsTazrim : 0)) - ((decemberSupplierWaresOutcome + decemberSupplierChangeableOutcom + decemberSupplierPermanentOutcome) + decemberSalaries)) / (decemberIncome + (decemberMonthTaxInvoicesIsTazrim != null ? decemberMonthTaxInvoicesIsTazrim : 0)))
  }, [decemberIncome, decemberSupplierWaresOutcome, decemberSupplierChangeableOutcom, decemberSupplierPermanentOutcome, decemberSalaries, decemberMonthTaxInvoicesIsTazrim])




  const forjanuarVat = Math.round(januarSupplierOutcomeVat - (januarSupplierOutcomeVat / 1.17))
  const forjanuarVat2 = Math.round(januarIncome + januarMonthTaxInvoicesIsTazrim - ((januarIncome + januarMonthTaxInvoicesIsTazrim) / 1.17))
  const januarVat = forjanuarVat2 - forjanuarVat;

  const forFebruaryVat = Math.round(februarySupplierOutcomeVat - (februarySupplierOutcomeVat / 1.17))
  const forFebruaryVat2 = Math.round((februaryIncome + februaryMonthTaxInvoicesIsTazrim) - ((februaryIncome + februaryMonthTaxInvoicesIsTazrim)  / 1.17))
  const februaryVat = forFebruaryVat2 - forFebruaryVat;

  const forMarchVat = Math.round(marchSupplierOutcomeVat - (marchSupplierOutcomeVat / 1.17))
  const forMarchVat2 = Math.round((marchIncome + marchMonthTaxInvoicesIsTazrim) - ((marchIncome + marchMonthTaxInvoicesIsTazrim) / 1.17))
  const marchVat = forMarchVat2 - forMarchVat;

  const forAprilVat = Math.round(aprilSupplierOutcomeVat - (aprilSupplierOutcomeVat / 1.17))
  const forAprilVat2 = Math.round((aprilIncome + aprilMonthTaxInvoicesIsTazrim) - ((aprilIncome + aprilMonthTaxInvoicesIsTazrim) / 1.17))
  const aprilVat = forAprilVat2 - forAprilVat;

  const forMayVat = Math.round(maySupplierOutcomeVat - (maySupplierOutcomeVat / 1.17))
  const forMayVat2 = Math.round((mayIncome + mayMonthTaxInvoicesIsTazrim) - ((mayIncome + mayMonthTaxInvoicesIsTazrim) / 1.17))
  const mayVat = forMayVat2 - forMayVat;

  const forJuneVat = Math.round(juneSupplierOutcomeVat - (juneSupplierOutcomeVat / 1.17))
  const forJuneVat2 = Math.round((juneIncome + juneMonthTaxInvoicesIsTazrim) - ((juneIncome + juneMonthTaxInvoicesIsTazrim) / 1.17))
  const juneVat = forJuneVat2 - forJuneVat;

  const forJulyVat = Math.round(julySupplierOutcomeVat - (julySupplierOutcomeVat / 1.17))
  const forJulyVat2 = Math.round((julyIncome + julyMonthTaxInvoicesIsTazrim) - ((julyIncome + julyMonthTaxInvoicesIsTazrim) / 1.17))
  const julyVat = forJulyVat2 - forJulyVat;

  const forAugustVat = Math.round(augustSupplierOutcomeVat - (augustSupplierOutcomeVat / 1.17))
  const forAugustVat2 = Math.round((augustIncome + augustrMonthTaxInvoicesIsTazrim) - ((augustIncome + augustrMonthTaxInvoicesIsTazrim) / 1.17))
  const augustVat = forAugustVat2 - forAugustVat;

  const forSeptemberVat = Math.round(septemberSupplierOutcomeVat - (septemberSupplierOutcomeVat / 1.17))
  const forSeptemberVat2 = Math.round((septemberIncome + septemberMonthTaxInvoicesIsTazrim) - ((septemberIncome + septemberMonthTaxInvoicesIsTazrim) / 1.17))
  const septemberVat = forSeptemberVat2 - forSeptemberVat;

  const forOctoberVat = Math.round(octoberSupplierOutcomeVat - (octoberSupplierOutcomeVat / 1.17))
  const forOctoberVat2 = Math.round((octoberIncome + octoberMonthTaxInvoicesIsTazrim) - ((octoberIncome + octoberMonthTaxInvoicesIsTazrim) / 1.17))
  const octoberVat = forOctoberVat2 - forOctoberVat;

  const forNovemberVat = Math.round(novemberSupplierOutcomeVat - (novemberSupplierOutcomeVat / 1.17))
  const forNovemberVat2 = Math.round((novemberIncome + novemberMonthTaxInvoicesIsTazrim) - ((novemberIncome + novemberMonthTaxInvoicesIsTazrim) / 1.17))
  const novemberVat = forNovemberVat2 - forNovemberVat;

  const forDecemberVat = Math.round(decemberSupplierOutcomeVat - (decemberSupplierOutcomeVat / 1.17))
  const forDecemberVat2 = Math.round((decemberIncome + decemberMonthTaxInvoicesIsTazrim) - ((decemberIncome + decemberMonthTaxInvoicesIsTazrim) / 1.17))
  const decemberVat = forDecemberVat2 - forDecemberVat;


  useEffect(()=> {
    setJanuarProfit((Math.round(januarIncome) + januarMonthTaxInvoicesIsTazrim) - ((januarSupplierWaresOutcome + januarSupplierChangeableOutcom + januarSupplierPermanentOutcome) + januarSalaries + januarVat))
}, [januarProfit, januarIncome, januarSupplierWaresOutcome, januarSupplierChangeableOutcom, januarSupplierPermanentOutcome, januarSalaries, januarMonthTaxInvoicesIsTazrim, januarSupplierWaresOutcome, januarSupplierChangeableOutcom, januarSupplierPermanentOutcome, januarVat])

  useEffect(()=> {
    setFebruaryProfit((Math.round(februaryIncome) + februaryMonthTaxInvoicesIsTazrim) - ((februarySupplierWaresOutcome + februarySupplierChangeableOutcom + februarySupplierPermanentOutcome) + februarySalaries + februaryVat))
}, [februaryProfit, februaryIncome, februarySupplierWaresOutcome, februarySupplierChangeableOutcom, februarySupplierPermanentOutcome, februarySalaries, februaryMonthTaxInvoicesIsTazrim, februarySupplierWaresOutcome, februarySupplierChangeableOutcom, februarySupplierPermanentOutcome, februaryVat])

  useEffect(()=> {
    setMarchProfit((Math.round(marchIncome) + marchMonthTaxInvoicesIsTazrim) - ((marchSupplierWaresOutcome + marchSupplierChangeableOutcom + marchSupplierPermanentOutcome) + marchSalaries + marchVat))
}, [marchProfit, marchIncome, marchSupplierWaresOutcome, marchSupplierChangeableOutcom, marchSupplierPermanentOutcome, marchSalaries, marchMonthTaxInvoicesIsTazrim, marchSupplierWaresOutcome, marchSupplierChangeableOutcom, marchSupplierPermanentOutcome, marchVat])

  useEffect(()=> {
    setAprilProfit((Math.round(aprilIncome) + aprilMonthTaxInvoicesIsTazrim) - ((aprilSupplierWaresOutcome + aprilSupplierChangeableOutcom + aprilSupplierPermanentOutcome) + aprilSalaries + aprilVat))
}, [aprilProfit, aprilIncome, aprilSupplierWaresOutcome, aprilSupplierChangeableOutcom, aprilSupplierPermanentOutcome, aprilSalaries, aprilMonthTaxInvoicesIsTazrim, aprilSupplierWaresOutcome, aprilSupplierChangeableOutcom, aprilSupplierPermanentOutcome, aprilVat])

  useEffect(()=> {
    setMayProfit((Math.round(mayIncome) + mayMonthTaxInvoicesIsTazrim) - ((maySupplierWaresOutcome + maySupplierChangeableOutcom + maySupplierPermanentOutcome) + maySalaries + mayVat))
}, [mayProfit, mayIncome, maySupplierWaresOutcome, maySupplierChangeableOutcom, maySupplierPermanentOutcome, maySalaries, mayMonthTaxInvoicesIsTazrim, maySupplierWaresOutcome, maySupplierChangeableOutcom, maySupplierPermanentOutcome, mayVat])

  useEffect(()=> {
    setJuneProfit((Math.round(juneIncome) + juneMonthTaxInvoicesIsTazrim) - ((juneSupplierWaresOutcome + juneSupplierChangeableOutcom + juneSupplierPermanentOutcome) + juneSalaries + juneVat))
}, [juneProfit, juneIncome, juneSupplierWaresOutcome, juneSupplierChangeableOutcom, juneSupplierPermanentOutcome, juneSalaries, juneMonthTaxInvoicesIsTazrim, juneSupplierWaresOutcome, juneSupplierChangeableOutcom, juneSupplierPermanentOutcome, juneVat])

  useEffect(()=> {
      setJulyProfit((Math.round(julyIncome) + julyMonthTaxInvoicesIsTazrim) - ((julySupplierWaresOutcome + julySupplierChangeableOutcom + julySupplierPermanentOutcome) + julySalaries + julyVat))
  }, [julyProfit, julyIncome, julySupplierWaresOutcome, julySupplierChangeableOutcom, julySupplierPermanentOutcome, julySalaries, julyMonthTaxInvoicesIsTazrim, julyVat])

  useEffect(()=> {
    setAugustProfit((Math.round(augustIncome) + augustrMonthTaxInvoicesIsTazrim) - ((augustSupplierWaresOutcome + augustSupplierChangeableOutcom + augustSupplierPermanentOutcome) + augustSalaries + augustVat))
}, [augustProfit, augustIncome, augustSupplierWaresOutcome, augustSupplierChangeableOutcom, augustSupplierPermanentOutcome, augustSalaries, augustrMonthTaxInvoicesIsTazrim, augustSupplierWaresOutcome, augustSupplierChangeableOutcom, augustSupplierPermanentOutcome, augustVat])

useEffect(()=> {
  setSeptemberProfit((Math.round(septemberIncome) + septemberMonthTaxInvoicesIsTazrim) - ((septemberSupplierWaresOutcome + septemberSupplierChangeableOutcom + septemberSupplierPermanentOutcome) + septemberSalaries + septemberVat))
}, [septemberProfit, septemberIncome, septemberSupplierWaresOutcome, septemberSupplierChangeableOutcom, septemberSupplierPermanentOutcome, septemberSalaries, septemberMonthTaxInvoicesIsTazrim, septemberSupplierWaresOutcome, septemberSupplierChangeableOutcom, septemberSupplierPermanentOutcome, septemberVat])

useEffect(()=> {
  setOctoberProfit((Math.round(octoberIncome) + octoberMonthTaxInvoicesIsTazrim) - ((octoberSupplierWaresOutcome + octoberSupplierChangeableOutcom + octoberSupplierPermanentOutcome) + octoberSalaries + octoberVat))
}, [octoberProfit, octoberIncome, octoberSupplierWaresOutcome, octoberSupplierChangeableOutcom, octoberSupplierPermanentOutcome, octoberSalaries, octoberMonthTaxInvoicesIsTazrim, octoberSupplierWaresOutcome, octoberSupplierChangeableOutcom, octoberSupplierPermanentOutcome, octoberVat])

useEffect(()=> {
  setNovemberProfit((Math.round(novemberIncome) + novemberMonthTaxInvoicesIsTazrim) - ((novemberSupplierWaresOutcome + novemberSupplierChangeableOutcom + novemberSupplierPermanentOutcome) + novemberSalaries + novemberVat))
}, [novemberProfit, novemberIncome, novemberSupplierWaresOutcome, novemberSupplierChangeableOutcom, novemberSupplierPermanentOutcome, novemberSalaries, novemberMonthTaxInvoicesIsTazrim, novemberSupplierWaresOutcome, novemberSupplierChangeableOutcom, novemberSupplierChangeableOutcom, novemberVat])

useEffect(()=> {
  setDecemberProfit((Math.round(decemberIncome) + decemberMonthTaxInvoicesIsTazrim) - ((decemberSupplierWaresOutcome + decemberSupplierChangeableOutcom + decemberSupplierPermanentOutcome) + decemberSalaries + decemberVat))
}, [decemberProfit, decemberIncome, decemberSupplierWaresOutcome, decemberSupplierChangeableOutcom, decemberSupplierPermanentOutcome, decemberSalaries, decemberMonthTaxInvoicesIsTazrim, decemberVat])

    const reports = [
        {id: 1, vat: Number(isFinite(januarVat) ? januarVat : 0).toLocaleString(), totalProfit: Number(isFinite(januarProfit) ? januarProfit : 0).toLocaleString(), profitTifuli: isFinite(januarTifuliProfit) ? `${Math.round(januarTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(januarGolmiProfit) ? `${Math.round(januarGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(Math.round(januarIncome)) ? Math.round(januarIncome) : 0).toLocaleString(), taxInvoices: Number(januarMonthTaxInvoicesIsTazrim != null ? januarMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(Math.round(januarIncome) + januarMonthTaxInvoicesIsTazrim) ? Math.round(januarIncome) + januarMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((januarSupplierWaresOutcome + januarSupplierChangeableOutcom + januarSupplierPermanentOutcome) + januarSalaries) ? (januarSupplierWaresOutcome + januarSupplierChangeableOutcom + januarSupplierPermanentOutcome) + januarSalaries : 0).toLocaleString(), salaries: Number(isFinite(januarSalaries) ? januarSalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(januarSupplierChangeableOutcom)) ? Math.round(januarSupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(januarSupplierPermanentOutcome)) ? Math.round(januarSupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(januarSupplierWaresOutcome)) ? Math.round(januarSupplierWaresOutcome) : 0).toLocaleString(), month: 1},
        {id: 2, vat: Number(isFinite(februaryVat) ? februaryVat : 0).toLocaleString(), totalProfit: Number(isFinite(februaryProfit) ? februaryProfit : 0).toLocaleString(), profitTifuli: isFinite(februaryTifuliProfit) ? `${Math.round(februaryTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(februaryGolmiProfit) ? `${Math.round(februaryGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(februaryIncome) ? februaryIncome : 0).toLocaleString(), taxInvoices: Number(februaryMonthTaxInvoicesIsTazrim != null ? februaryMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(Math.round(februaryIncome) + februaryMonthTaxInvoicesIsTazrim) ? februaryIncome + februaryMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((februarySupplierWaresOutcome + februarySupplierChangeableOutcom + februarySupplierPermanentOutcome) + februarySalaries) ? (februarySupplierWaresOutcome + februarySupplierChangeableOutcom + februarySupplierPermanentOutcome) + februarySalaries : 0).toLocaleString(), salaries: Number(isFinite(februarySalaries) ? februarySalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(februarySupplierChangeableOutcom)) ? Math.round(februarySupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(februarySupplierPermanentOutcome)) ? Math.round(februarySupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(februarySupplierWaresOutcome)) ? Math.round(februarySupplierWaresOutcome) : 0).toLocaleString(), month: 2},
        {id: 3, vat: Number(isFinite(marchVat) ? marchVat : 0).toLocaleString(), totalProfit: Number(isFinite(marchProfit) ? marchProfit : 0).toLocaleString(), profitTifuli: isFinite(marchTifuliProfit) ? `${Math.round(marchTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(marchGolmiProfit) ? `${Math.round(marchGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(marchIncome) ? marchIncome : 0).toLocaleString(), taxInvoices: Number(marchMonthTaxInvoicesIsTazrim != null ? marchMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(marchIncome + marchMonthTaxInvoicesIsTazrim) ? marchIncome + marchMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((marchSupplierWaresOutcome + marchSupplierChangeableOutcom + marchSupplierPermanentOutcome) + marchSalaries) ? (marchSupplierWaresOutcome + marchSupplierChangeableOutcom + marchSupplierPermanentOutcome) + marchSalaries : 0).toLocaleString(), salaries: Number(isFinite(marchSalaries) ? marchSalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(marchSupplierChangeableOutcom)) ? Math.round(marchSupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(marchSupplierPermanentOutcome)) ? Math.round(marchSupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(marchSupplierWaresOutcome)) ? Math.round(marchSupplierWaresOutcome) : 0).toLocaleString(), month: 3},
        {id: 4, vat: Number(isFinite(aprilVat) ? aprilVat : 0).toLocaleString(), totalProfit: Number(isFinite(aprilProfit) ? aprilProfit : 0).toLocaleString(), profitTifuli: isFinite(aprilTifuliProfit) ? `${Math.round(aprilTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(aprilGolmiProfit) ? `${Math.round(aprilGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(aprilIncome) ? aprilIncome : 0).toLocaleString(), taxInvoices: Number(aprilMonthTaxInvoicesIsTazrim != null ? aprilMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(aprilIncome + aprilMonthTaxInvoicesIsTazrim) ? aprilIncome + aprilMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((aprilSupplierWaresOutcome + aprilSupplierChangeableOutcom + aprilSupplierPermanentOutcome) + aprilSalaries) ? (aprilSupplierWaresOutcome + aprilSupplierChangeableOutcom + aprilSupplierPermanentOutcome) + aprilSalaries : 0).toLocaleString(), salaries: Number(isFinite(aprilSalaries) ? aprilSalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(aprilSupplierChangeableOutcom)) ? Math.round(aprilSupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(aprilSupplierPermanentOutcome)) ? Math.round(aprilSupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(aprilSupplierWaresOutcome)) ? Math.round(aprilSupplierWaresOutcome) : 0).toLocaleString(), month: 4},
        {id: 5, vat: Number(isFinite(mayVat) ? mayVat : 0).toLocaleString(), totalProfit: Number(isFinite(mayProfit) ? mayProfit : 0).toLocaleString(), profitTifuli: isFinite(mayTifuliProfit) ? `${Math.round(mayTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(mayGolmiProfit) ? `${Math.round(mayGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(mayIncome) ? mayIncome : 0).toLocaleString(), taxInvoices: Number(mayMonthTaxInvoicesIsTazrim != null ? mayMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(mayIncome + mayMonthTaxInvoicesIsTazrim) ? mayIncome + mayMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((maySupplierWaresOutcome + maySupplierChangeableOutcom + maySupplierPermanentOutcome) + maySalaries) ? (maySupplierWaresOutcome + maySupplierChangeableOutcom + maySupplierPermanentOutcome) + maySalaries : 0).toLocaleString(), salaries: Number(isFinite(maySalaries) ? maySalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(maySupplierChangeableOutcom)) ? Math.round(maySupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(maySupplierPermanentOutcome)) ? Math.round(maySupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(maySupplierWaresOutcome)) ? Math.round(maySupplierWaresOutcome) : 0).toLocaleString(), month: 5},
        {id: 6, vat: Number(isFinite(juneVat) ? juneVat : 0).toLocaleString(), totalProfit: Number(isFinite(juneProfit) ? juneProfit : 0).toLocaleString(), profitTifuli: isFinite(juneTifuliProfit) ? `${Math.round(juneTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(juneGolmiProfit) ? `${Math.round(juneGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(juneIncome) ? juneIncome : 0).toLocaleString(), taxInvoices: Number(juneMonthTaxInvoicesIsTazrim != null ? juneMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(juneIncome + juneMonthTaxInvoicesIsTazrim) ? juneIncome + juneMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((juneSupplierWaresOutcome + juneSupplierChangeableOutcom + juneSupplierPermanentOutcome) + juneSalaries) ? (juneSupplierWaresOutcome + juneSupplierChangeableOutcom + juneSupplierPermanentOutcome) + juneSalaries : 0).toLocaleString(), salaries: Number(isFinite(juneSalaries) ? juneSalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(juneSupplierChangeableOutcom)) ? Math.round(juneSupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(juneSupplierPermanentOutcome)) ? Math.round(juneSupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(juneSupplierWaresOutcome)) ? Math.round(juneSupplierWaresOutcome) : 0).toLocaleString(), month: 6},
        {id: 7, vat: Number(isFinite(julyVat) ? julyVat : 0).toLocaleString(), totalProfit: Number(isFinite(julyProfit) ? julyProfit : 0).toLocaleString(), profitTifuli: isFinite(julyTifuliProfit) ? `${Math.round(julyTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(julyGolmiProfit) ? `${Math.round(julyGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(julyIncome) ? julyIncome : 0).toLocaleString(), taxInvoices: Number(julyMonthTaxInvoicesIsTazrim != null ? julyMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(julyIncome + julyMonthTaxInvoicesIsTazrim) ? julyIncome + julyMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((julySupplierWaresOutcome + julySupplierChangeableOutcom + julySupplierPermanentOutcome) + julySalaries) ? (julySupplierWaresOutcome + julySupplierChangeableOutcom + julySupplierPermanentOutcome) + julySalaries : 0).toLocaleString(), salaries: Number(isFinite(julySalaries) ? julySalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(julySupplierChangeableOutcom)) ? Math.round(julySupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(julySupplierPermanentOutcome)) ? Math.round(julySupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(julySupplierWaresOutcome)) ? Math.round(julySupplierWaresOutcome) : 0).toLocaleString(), month: 7},
        {id: 8, vat: Number(isFinite(augustVat) ? augustVat : 0).toLocaleString(), totalProfit: Number(isFinite(augustProfit) ? augustProfit : 0).toLocaleString(), profitTifuli: isFinite(augustTifuliProfit) ? `${Math.round(augustTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(augustGolmiProfit) ? `${Math.round(augustGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(augustIncome) ? augustIncome : 0).toLocaleString(), taxInvoices: Number(augustrMonthTaxInvoicesIsTazrim != null ? augustrMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(augustIncome + augustrMonthTaxInvoicesIsTazrim) ? augustIncome + augustrMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((augustSupplierWaresOutcome + augustSupplierChangeableOutcom + augustSupplierPermanentOutcome) + augustSalaries) ? (augustSupplierWaresOutcome + augustSupplierChangeableOutcom + augustSupplierPermanentOutcome) + augustSalaries : 0).toLocaleString(), salaries: Number(isFinite(augustSalaries) ? augustSalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(augustSupplierChangeableOutcom)) ? Math.round(augustSupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(augustSupplierPermanentOutcome)) ? Math.round(augustSupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(augustSupplierWaresOutcome)) ? Math.round(augustSupplierWaresOutcome) : 0).toLocaleString(), month: 8},
        {id: 9, vat: Number(isFinite(septemberVat) ? septemberVat : 0).toLocaleString(), totalProfit: Number(isFinite(septemberProfit) ? septemberProfit : 0).toLocaleString(), profitTifuli: isFinite(septemberTifuliProfit) ? `${Math.round(septemberTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(septemberGolmiProfit) ? `${Math.round(septemberGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(septemberIncome) ? septemberIncome : 0).toLocaleString(), taxInvoices: Number(septemberMonthTaxInvoicesIsTazrim != null ? septemberMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(septemberIncome + septemberMonthTaxInvoicesIsTazrim) ? septemberIncome + septemberMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((septemberSupplierWaresOutcome + septemberSupplierChangeableOutcom + septemberSupplierPermanentOutcome) + septemberSalaries) ? (septemberSupplierWaresOutcome + septemberSupplierChangeableOutcom + septemberSupplierPermanentOutcome) + septemberSalaries : 0).toLocaleString(), salaries: Number(isFinite(septemberSalaries) ? septemberSalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(septemberSupplierChangeableOutcom)) ? Math.round(septemberSupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(septemberSupplierPermanentOutcome)) ? Math.round(septemberSupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(septemberSupplierWaresOutcome)) ? Math.round(septemberSupplierWaresOutcome) : 0).toLocaleString(), month: 9},
        {id: 10, vat: Number(isFinite(octoberVat) ? octoberVat : 0).toLocaleString(), totalProfit: Number(isFinite(octoberProfit) ? octoberProfit : 0).toLocaleString(), profitTifuli: isFinite(octoberTifuliProfit) ? `${Math.round(octoberTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(octoberGolmiProfit) ? `${Math.round(octoberGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(octoberIncome) ? octoberIncome : 0).toLocaleString(), taxInvoices: Number(octoberMonthTaxInvoicesIsTazrim != null ? octoberMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(octoberIncome + octoberMonthTaxInvoicesIsTazrim) ? octoberIncome + octoberMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((octoberSupplierWaresOutcome + octoberSupplierChangeableOutcom + octoberSupplierPermanentOutcome) + octoberSalaries) ? (octoberSupplierWaresOutcome + octoberSupplierChangeableOutcom + octoberSupplierPermanentOutcome) + octoberSalaries : 0).toLocaleString(), salaries: Number(isFinite(octoberSalaries) ? octoberSalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(octoberSupplierChangeableOutcom)) ? Math.round(octoberSupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(octoberSupplierPermanentOutcome)) ? Math.round(octoberSupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(octoberSupplierWaresOutcome)) ? Math.round(octoberSupplierWaresOutcome) : 0).toLocaleString(), month: 10},
        {id: 11, vat: Number(isFinite(novemberVat) ? novemberVat : 0).toLocaleString(), totalProfit: Number(isFinite(novemberProfit) ? novemberProfit : 0).toLocaleString(), profitTifuli: isFinite(novemberTifuliProfit) ? `${Math.round(novemberTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(novemberGolmiProfit) ? `${Math.round(novemberGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(novemberIncome) ? novemberIncome : 0).toLocaleString(), taxInvoices: Number(novemberMonthTaxInvoicesIsTazrim != null ? novemberMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(novemberIncome + novemberMonthTaxInvoicesIsTazrim) ? novemberIncome + novemberMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((novemberSupplierWaresOutcome + novemberSupplierChangeableOutcom + novemberSupplierPermanentOutcome) + novemberSalaries) ? (novemberSupplierWaresOutcome + novemberSupplierChangeableOutcom + novemberSupplierPermanentOutcome) + novemberSalaries : 0).toLocaleString(), salaries: Number(isFinite(novemberSalaries) ? novemberSalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(novemberSupplierChangeableOutcom)) ? Math.round(novemberSupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(novemberSupplierPermanentOutcome)) ? Math.round(novemberSupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(novemberSupplierWaresOutcome)) ? Math.round(novemberSupplierWaresOutcome) : 0).toLocaleString(), month: 11},
        {id: 12, vat: Number(isFinite(decemberVat) ? decemberVat : 0).toLocaleString(), totalProfit: Number(isFinite(decemberProfit) ? decemberProfit : 0).toLocaleString(), profitTifuli: isFinite(decemberTifuliProfit) ? `${Math.round(decemberTifuliProfit?.toFixed(2) * 100)}%` : 0, profitGolmi: isFinite(decemberGolmiProfit) ? `${Math.round(decemberGolmiProfit?.toFixed(2) * 100)}%` : 0, income: Number(isFinite(decemberIncome) ? decemberIncome : 0).toLocaleString(), taxInvoices: Number(decemberMonthTaxInvoicesIsTazrim != null ? decemberMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totalIncome: Number(isFinite(decemberIncome + decemberMonthTaxInvoicesIsTazrim) ? decemberIncome + decemberMonthTaxInvoicesIsTazrim : 0).toLocaleString(), totaloutcome: Number(isFinite((decemberSupplierWaresOutcome + decemberSupplierChangeableOutcom + decemberSupplierPermanentOutcome) + decemberSalaries) ? (decemberSupplierWaresOutcome + decemberSupplierChangeableOutcom + decemberSupplierPermanentOutcome) + decemberSalaries : 0).toLocaleString(), salaries: Number(isFinite(decemberSalaries) ? decemberSalaries : 0).toLocaleString(), changeableOutcome: Number(isFinite(Math.round(decemberSupplierChangeableOutcom)) ? Math.round(decemberSupplierChangeableOutcom) : 0).toLocaleString(), permanentOutcome: Number(isFinite(Math.round(decemberSupplierPermanentOutcome)) ? Math.round(decemberSupplierPermanentOutcome) : 0).toLocaleString(), supplierswaresoutcome: Number(isFinite(Math.round(decemberSupplierWaresOutcome)) ? Math.round(decemberSupplierWaresOutcome) : 0).toLocaleString(), month: 12}]


          const handleCloseAlert = () => {
            setAlert(false)
          }

          const getMonthInHebrew2 = (e) => {
            let month = "";
              switch (e) {
                case 1:
                    month = "ינואר"
                  break;
                  case 2:
                    month = "פברואר"
                    break;
                    case 3:
                        month = "מרץ"
                      break;
                      case 4:
                        month = "אפריל"
                        break;
                        case 5:
                            month = "מאי"
                        break;
                        case 6:
                            month = "יוני"
                        break;
                        case 7:
                          month = "יולי"
                        break;
                        case 8:
                            month = "אוגוסט"
                        break;
                        case 9:
                            month = "ספטמבר"
                        break;
                        case 10:
                          month = "אוקטובר"
                        break;
                        case 11:
                            month = "נובמבר"
                        break;
                        case 12:
                            month = "דצמבר"
                        break;
                // default:
                //   month = new Date().getMonth().toLocaleString()
                //   break;
              }
              // setMonthNumber(monthNum)
              return month;
            //   return monthNum;
          }
         
    
  return (
    <section class={`bg-gray-50 ${hebrew ? 'airx:ml-64' : 'airx:mr-64'} dark:bg-gray-900 pt-1 h-[90vh] overflow-y-auto scrollbar-none mt-14 ${windowWidth < 766 && 'bg-gray-700 dark'} ${globalTheme != "light" && "bg-gray-700 dark"}`}>
    {/* <div className="flex justify-start items-center">
          <ReactToPrint
          trigger={() => {
            // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop
            // to the root node of the returned component as it will be overwritten.
            return <a href="#">
                    <div className="flex items-start justify-center mb-[2px]">
                    <LocalPrintshopIcon className='text-[#005792] cursor-pointer hover:scale-110 ease-out transition-all duration-125 ml-4'/> 
                    </div>
                    </a>;
          }}
          content={() => componentRef.current}
          documentTitle='דו"ח שנתי'
        />
      <div onClick={hebrew  ? printPdf2 : printPdf}>
        <PictureAsPdfIcon className='text-[#005792] cursor-pointer hover:scale-110 ease-out transition-all duration-125 ml-4 mb-[3px]'/>
      </div>
       <div className="mb-[3px]">
         <SwitchThemeYear xxx={refetchAll} />
       </div>
          </div> */}
        
        {isSSR ? (
         
          <>
          <LinearProgress />
          </>
        ) : (
        <>
         <div ref={componentRef} className='pr-2'>
       {hebrew ? (
        <>
        <div class="mx-auto max-w-screen-5xl px-4 lg:px-2 h-4/5">
        <div class="bg-white dark:bg-gray-800 relative shadow-md sm:rounded-lg overflow-hidden">
            <div class="flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4">
                <div class="w-full md:w-1/4">
                    <form class="flex items-center">
                        <label for="simple-search" class="sr-only">Search</label>
                        <div class="relative w-full">
                            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                                <svg aria-hidden="true" class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <input type="text" id="simple-search" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Search" required=""/>
                        </div>
                    </form>
                </div>
                <div class="w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0">
               
                    <div class="flex items-center space-x-3 w-full md:w-auto">
                        {/* <button id="actionsDropdownButton" data-dropdown-toggle="actionsDropdown" class="w-full md:w-auto flex items-center justify-center py-2 px-4 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-primary-700 focus:z-10 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700" type="button">
                            <svg class="-ml-1 mr-1.5 w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                                <path clip-rule="evenodd" fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" />
                            </svg>
                            Actions
                        </button> */}
                        {/* <div id="actionsDropdown" class="hidden z-10 w-44 bg-white rounded divide-y divide-gray-100 shadow dark:bg-gray-700 dark:divide-gray-600">
                            <ul class="py-1 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="actionsDropdownButton">
                                <li>
                                    <a href="#" class="block py-2 px-4 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Mass Edit</a>
                                </li>
                            </ul>
                            <div class="py-1">
                                <a href="#" class="block py-2 px-4 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">Delete all</a>
                            </div>
                        </div> */}
                        {/* <button id="filterDropdownButton" data-dropdown-toggle="filterDropdown" class="w-full md:w-auto flex items-center justify-center py-2 px-4 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-primary-700 focus:z-10 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700" type="button">
                            <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" class="h-4 w-4 mr-2 text-gray-400" viewbox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-.293.707l-2 2A1 1 0 018 17v-5.586L3.293 6.707A1 1 0 013 6V3z" clip-rule="evenodd" />
                            </svg>
                            Filter
                            <svg class="-mr-1 ml-1.5 w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                                <path clip-rule="evenodd" fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" />
                            </svg>
                        </button> */}
                        {/* <div id="filterDropdown" class="z-10 hidden w-48 p-3 bg-white rounded-lg shadow dark:bg-gray-700">
                            <h6 class="mb-3 text-sm font-medium text-gray-900 dark:text-white">Choose brand</h6>
                            <ul class="space-y-2 text-sm" aria-labelledby="filterDropdownButton">
                                <li class="flex items-center">
                                    <input id="apple" type="checkbox" value="" class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500"/>
                                    <label for="apple" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-100">Apple (56)</label>
                                </li>
                                <li class="flex items-center">
                                    <input id="fitbit" type="checkbox" value="" class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500"/>
                                    <label for="fitbit" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-100">Microsoft (16)</label>
                                </li>
                                <li class="flex items-center">
                                    <input id="razor" type="checkbox" value="" class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500"/>
                                    <label for="razor" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-100">Razor (49)</label>
                                </li>
                                <li class="flex items-center">
                                    <input id="nikon" type="checkbox" value="" class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500"/>
                                    <label for="nikon" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-100">Nikon (12)</label>
                                </li>
                                <li class="flex items-center">
                                    <input id="benq" type="checkbox" value="" class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500"/>
                                    <label for="benq" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-100">BenQ (74)</label>
                                </li>
                            </ul>
                        </div> */}
                     <SwitchThemeYear xxx={refetchAll} />
                    <button type="button" class="flex items-center justify-center text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800" onClick={hebrew  ? printPdf2 : printPdf}>
                         Print Report
                   </button>
                    </div>
                </div>
            </div>
            <div class="overflow-x-auto">
                <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                        <tr>
                           
            <th scope="col" className="px-1 text-center py-2">month</th>
            <th scope="col" className="px-1 text-center py-2">commodity</th>
            <th scope="col" className="px-1 text-center py-2">permanent</th>
            <th scope="col" className="px-1 text-center py-2">changable</th>
            <th scope="col" className="px-1 text-center py-2">salaries</th>
            <th scope="col" className="px-1 text-center py-2">total outcome</th>
            <th scope="col" className="px-1 text-center py-2">daily Z</th>
            <th scope="col" className="px-1 text-center py-2">invoices</th>
            <th scope="col" className="px-1 text-center py-2">total income</th>
            <th scope="col" className="px-1 text-center py-2">gross profit</th>
            <th scope="col" className="px-1 text-center py-2">operating profit</th>
            <th scope="col" className="px-1 text-center py-2">vat</th>
            <th scope="col" className="px-1 text-center py-2">profit</th>
                            
                        </tr>
                    </thead>
                    <tbody>
            {reports.map((report, index) => (
              <tr key={report.id} className={`${index % 2 === 0 ? 'bg-white dark:bg-gray-800' : 'bg-white dark:bg-gray-800'} border-b dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-900`}>
              <th scope="col" className="px-1 text-center py-3 dark:text-[#ccc]">{report.month}</th>
              <td scope="col" className="px-1 text-center py-3 text-red-400">{report.supplierswaresoutcome}</td>
              <td scope="col" className="px-1 text-center py-3 text-red-400">{report.permanentOutcome}</td>
              <td scope="col" className="px-1 text-center py-3 text-red-400">{report.changeableOutcome}</td>
              <td scope="col" className="px-1 text-center py-3 text-red-400">{report.salaries}</td>
              <th scope="col" className="px-1 text-center py-3 text-red-400">{report.totaloutcome}</th>
              <td scope="col" className="px-1 text-center py-3 text-green-400">{report.income}</td>
              <td scope="col" className="px-1 text-center py-3 text-green-400">{report.taxInvoices}</td>
              <th scope="col" className="px-1 text-center py-3 text-green-400">{report.totalIncome}</th>
              <td scope="col" className="px-1 text-center py-3">{report.profitGolmi}</td>
              <td scope="col" className="px-1 text-center py-3">{report.profitTifuli}</td>
              <td scope="col" className="px-1 text-center py-3">{report.vat}</td>
              <th scope="col" className="px-1 text-center py-3 dark:text-[#ccc]">{report.totalProfit}</th>
              </tr>
            ))}
          </tbody>
                   
                </table>
            </div>
           
        </div>
    </div>
        </>
      //    <table className="min-w-full divide-y divide-gray-200 w-[98%] md:w-[78%] lg:w-[98%] airx:w-[88%] uuu:w-[86%] uur:w-[86.5%] 2xl:w-[87%] 4xl:w-[88%] 5xl:w-[89.5%]">
      //      <thead className="bg-sky-700 sticky top-0 z-50">
      //      <tr>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">month</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">commodity</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">permanent</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">changable</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">salaries</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">total outcome</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">daily Z</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">invoices</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">total income</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">gross profit</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">operating profit</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">vat</th>
      //      <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">profit</th>
             
             
      //      </tr>
      //    </thead>
      //    <tbody className="divide-y divide-gray-200">
      //      {reports.map((report, index) => (
      //        <tr key={report.month} className={`border ${index % 2 === 0 ? 'bg-sky-100' : ''}`}>
      //        <td scope="col" className="px-1 text-center py-3 text-xs font-bold text-blue-800">{report.month}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-red-600 text-xs">{report.supplierswaresoutcome}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-red-600 text-xs">{report.permanentOutcome}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-red-600 text-xs">{report.changeableOutcome}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-red-600 text-xs">{report.salaries}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-red-600 font-semibold text-xs">{report.totaloutcome}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-green-600 text-xs">{report.income}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-green-600 text-xs">{report.taxInvoices}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-green-600 font-semibold text-xs">{report.totalIncome}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-xs">{report.profitGolmi}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-xs">{report.profitTifuli}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-xs">{report.vat}</td>
      //        <td scope="col" className="px-1 text-center py-3 text-xs">{report.totalProfit}</td>
      //        </tr>
      //      ))}
      //    </tbody>
      //  </table>
    
       ) : (
        <>
         <div class="mx-auto max-w-screen-5xl px-4 lg:px-2 h-4/5">
        <div class="bg-white dark:bg-gray-800 relative shadow-md sm:rounded-lg overflow-hidden">
            <div class="flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4">
            <div class="w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0">
                   <button type="button" class="flex items-center justify-center text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800" onClick={hebrew  ? printPdf2 : printPdf}>
                         הדפס דו"ח שנתי
                   </button>
                   <div class="flex items-center space-x-3 w-full md:w-auto relative">
                   <SwitchThemeYear xxx={refetchAll} />

                       {/* <button class="w-full md:w-auto flex items-center justify-center py-2 px-4 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-primary-700 focus:z-10 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700" type="button" onClick={()=> setAction(!action)}>
                           <svg class="-ml-1 mr-1.5 w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                               <path clip-rule="evenodd" fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" />
                           </svg>
                           אפשרויות
                       </button> */}
                       {/* <div class={`${!action && 'hidden'} p-4 z-10 w-44 absolute top-10 -left-3 flex flex-col space-y-1 bg-white rounded divide-y divide-gray-100 shadow dark:bg-gray-700 dark:divide-gray-600`}>
                            <div className='flex items-center space-x-1.5 hover:bg-gray-100 rounded p-2 dark:hover:bg-gray-500 cursor-pointer' onClick={hebrew  ? printPdf2 : printPdf}>
                            <div>
                          <LocalPrintshopIcon className='text-[#005792] cursor-pointer hover:scale-110 ease-out transition-all duration-125 ml-4 mb-[3px]'/>
                          </div>         
                          <h1 className="text-sm text-gray-700 dark:text-gray-200 dark:hover:text-white">Print</h1>
       
                            </div>
                            <div className='hover:bg-gray-100 rounded p-1 dark:hover:bg-gray-500 cursor-pointer'>
                            <SwitchThemeYear xxx={refetchAll} />
                           </div>
                       </div> */}
                       {/* <button className="w-full md:w-auto flex items-center justify-center py-2 px-4 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-primary-700 focus:z-10 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700" type="button">
                           <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" class="h-4 w-4 mr-2 text-gray-400" viewbox="0 0 20 20" fill="currentColor">
                               <path fill-rule="evenodd" d="M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-.293.707l-2 2A1 1 0 018 17v-5.586L3.293 6.707A1 1 0 013 6V3z" clip-rule="evenodd" />
                           </svg>
                           פילטר
                           <svg class="-mr-1 ml-1.5 w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                               <path clip-rule="evenodd" fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" />
                           </svg>
                       </button> */}
                       {/* <div class="z-10 hidden w-48 p-3 bg-white rounded-lg shadow dark:bg-gray-700">
                           <h6 class="mb-3 text-sm font-medium text-gray-900 dark:text-white">Choose brand</h6>
                           <ul class="space-y-2 text-sm" aria-labelledby="filterDropdownButton">
                               <li class="flex items-center">
                                   <input id="apple" type="checkbox" value="" class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500"/>
                                   <label for="apple" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-100">Apple (56)</label>
                               </li>
                               <li class="flex items-center">
                                   <input id="fitbit" type="checkbox" value="" class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500"/>
                                   <label for="fitbit" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-100">Microsoft (16)</label>
                               </li>
                               <li class="flex items-center">
                                   <input id="razor" type="checkbox" value="" class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500"/>
                                   <label for="razor" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-100">Razor (49)</label>
                               </li>
                               <li class="flex items-center">
                                   <input id="nikon" type="checkbox" value="" class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500"/>
                                   <label for="nikon" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-100">Nikon (12)</label>
                               </li>
                               <li class="flex items-center">
                                   <input id="benq" type="checkbox" value="" class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-700 focus:ring-2 dark:bg-gray-600 dark:border-gray-500"/>
                                   <label for="benq" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-100">BenQ (74)</label>
                               </li>
                           </ul>
                       </div> */}
                      {/* <div className="flex items-center justify-center space-x-1">
                        <div onClick={hebrew  ? printPdf2 : printPdf}>
                          <PictureAsPdfIcon className='text-[#005792] cursor-pointer hover:scale-110 ease-out transition-all duration-125 ml-4 mb-[3px]'/>
                        </div>
                        <div className="mb-[3px]">
                          <SwitchThemeYear xxx={refetchAll} />
                        </div>
                      </div> */}
                   </div>
               </div>
               <div class="w-full md:w-1/4">
                   <form class="flex items-center">
                       <label for="simple-search" class="sr-only">Search</label>
                       <div class="relative w-full">
                           <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                               <svg aria-hidden="true" class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                   <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                               </svg>
                           </div>
                           <input type="text" id="simple-search" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Search" required=""/>
                       </div>
                   </form>
               </div>
          
            </div>
            <div class="overflow-x-auto hidden md:block">
                <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                       
              <tr>
             <th scope="col" className="px-1 text-center py-2">סה"כ רווח</th>
             <th scope="col" className="px-1 text-center py-2">מע"מ</th>
             <th scope="col" className="px-1 text-center py-2">רווח תפעולי</th>
             <th scope="col" className="px-1 text-center py-2">רווח גולמי</th>
             <th scope="col" className="px-1 text-center py-2">סה"כ הכנסות</th>
             <th scope="col" className="px-1 text-center py-2">חשבוניות</th>
             <th scope="col" className="px-1 text-center py-2">דו"ח יומי</th>
             <th scope="col" className="px-1 text-center py-2">סה"כ הוצאות</th>
             <th scope="col" className="px-1 text-center py-2">משכורות</th>
             <th scope="col" className="px-1 text-center py-2">משתנות</th>
             <th scope="col" className="px-1 text-center py-2">קבועות</th>
             <th scope="col" className="px-1 text-center py-2">סחורה</th>
             <th scope="col" className="px-1 text-center py-2">חודש</th>
            </tr>
                      
                    </thead>
                    <tbody>
                       {reports.map((report, index) => (
            <tr key={report.id} className={`${index % 2 === 0 ? 'bg-white dark:bg-gray-800' : 'bg-white dark:bg-gray-800'} border-b dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-900`}>
            <th scope="col" className="px-1 text-center py-3 text-xs">{report.totalProfit}</th>
             <td scope="col" className="px-1 text-center py-3 text-xs">{report.vat}</td>
             <td scope="col" className="px-1 text-center py-3 text-xs">{report.profitTifuli}</td>
             <td scope="col" className="px-1 text-center py-3 text-xs">{report.profitGolmi}</td>
             <td scope="col" className="px-1 text-center py-3 text-green-600 dark:text-green-500 font-semibold text-xs">{report.totalIncome}</td>
             <td scope="col" className="px-1 text-center py-3 text-xs">{report.taxInvoices}</td>
             <td scope="col" className="px-1 text-center py-3 text-xs">{report.income}</td>
             <td scope="col" className="px-1 text-center py-3 text-red-600 dark:text-red-500 font-semibold text-xs">{report.totaloutcome}</td>
             <td scope="col" className="px-1 text-center py-3 text-xs">{report.salaries}</td>
             <td scope="col" className="px-1 text-center py-3 text-xs">{report.changeableOutcome}</td>
             <td scope="col" className="px-1 text-center py-3 text-xs">{report.permanentOutcome}</td>
             <td scope="col" className="px-1 text-center py-3 text-xs">{report.supplierswaresoutcome}</td>
             <th scope="col" className="px-1 text-center py-3 dark:text-[#ccc]">{report.month}</th>
             </tr>
           ))}
                    </tbody>
                </table>
            </div>
            <div className='grid grid-cols-1 gap-3 md:hidden px-4 dark'>
              {reports.map(report => (
                // <div className={`p-4 ${globalTheme == "light" ? 'bg-white shadow rounded-lg' : 'blue-glassmorphism hover:bg-gray-900 shadow rounded'} flex flex-col space-y-2`}>
                <div className="p-4 blue-glassmorphism hover:bg-gray-900 shadow rounded flex flex-col space-y-1">

                <div className='flex items-center justify-between space-x-2 text-sm'>
                <div className='flex items-center justify-center space-x-2'>
                <div className='text-right font-mono dark:text-[#ccc]'>{report.totalProfit}</div>
                <div className='text-right text-lg text-[#333] dark:text-[#ccc]'>סה"כ רווח</div>
                </div>     
                <div className='flex items-center justify-center space-x-2'>
                <div className='text-right font-mono dark:text-[#ccc]'>{getMonthInHebrew2(report.month)}</div>
                <div className='text-right text-[#333] text-lg dark:text-[#ccc]'>חודש</div>
                </div>
                </div>
                <div className='flex items-center justify-end space-x-4'>
                <div className="flex items-center justify-center space-x-1">
                  <div className='text-right font-mono dark:text-[#ccc]'>{report.supplierswaresoutcome}</div>
                  <div className='text-right dark:text-[#ccc]'>סחורה</div>
                </div>
                <div className="flex items-center justify-center space-x-1">
                  <div className='text-right font-mono dark:text-[#ccc]'>{report.permanentOutcome}</div>
                  <div className='text-right dark:text-[#ccc]'>קבועות</div>
                </div>
                </div>
                <div className='flex items-center justify-end space-x-4'>
                <div className="flex items-center justify-center space-x-1">
                  <div className='text-right font-mono dark:text-[#ccc]'>{report.salaries}</div>
                  <div className='text-right dark:text-[#ccc]'>משכורות</div>
                </div>
                <div className="flex items-center justify-center space-x-1">
                  <div className='text-right font-mono dark:text-[#ccc]'>{report.changeableOutcome}</div>
                  <div className='text-right dark:text-[#ccc]'>משתנות</div>
                </div>
                </div>
               
                <div className='flex items-center justify-end space-x-2'>
                <div className='text-right font-mono dark:text-[#ccc]'>{report.totaloutcome}</div>
                <div className='text-right text-[#333] dark:text-[#ccc]'>סה"כ הוצאות</div>
                </div>
                           
                <div className='flex items-center justify-end space-x-4'>
                <div className="flex items-center justify-center space-x-1">
                  <div className='text-right font-mono dark:text-[#ccc]'>{report.taxInvoices}</div>
                  <div className='text-right dark:text-[#ccc]'>חשבוניות מס</div>
                </div>
                <div className="flex items-center justify-center space-x-1">
                  <div className='text-right font-mono dark:text-[#ccc]'>{report.income}</div>
                  <div className='text-right dark:text-[#ccc]'>דו"ח יומי</div>
                </div>
                </div>
                <div className='flex items-center justify-end space-x-2'>
                <div className='text-right font-mono dark:text-[#ccc]'>{report.totalIncome}</div>
                <div className='text-right text-[#333] dark:text-[#ccc]'>סה"כ הכנסות</div>
                </div>
                <div className='flex items-center justify-end space-x-4'>
                <div className="flex items-center justify-center space-x-1">
                  <div className='text-right font-mono dark:text-[#ccc]'>{report.profitTifuli}%</div>
                  <div className='text-right dark:text-[#ccc]'>רווח תפעולי</div>
                </div>
                <div className="flex items-center justify-center space-x-1">
                  <div className='text-right font-mono dark:text-[#ccc]'>{report.profitGolmi}%</div>
                  <div className='text-right dark:text-[#ccc]'>רווח גולמי</div>
                </div>
                </div>
                <div className='flex items-center justify-end space-x-2'>
                <div className='text-right font-mono dark:text-[#ccc]'><span className="font-sans text-xs">₪</span>{report.vat}</div>
                <div className='text-right text-[#333] dark:text-[#ccc]'>מע"מ לתשלום</div>
                </div>
              </div>
              ))}
            </div>
        </div>
    </div>
        </>
      //   <table className="min-w-full divide-y divide-gray-200 w-[98%] md:w-[78%] lg:w-[98%] airx:w-[88%] uuu:w-[86%] uur:w-[86.5%] 2xl:w-[87%] 4xl:w-[88%] 5xl:w-[89.5%]">
      //     <thead className="bg-sky-700 sticky top-0 z-50">
      //     <tr>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">סה"כ רווח</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">מע"מ</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">רווח תפעולי</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">רווח גולמי</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">סה"כ הכנסות</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">חשבוניות</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">דו"ח יומי</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">סה"כ הוצאות</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">משכורות</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">משתנות</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">קבועות</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">סחורה</th>
      //       <th scope="col" className="px-1 text-center py-2 text-[11px] sm:text-xs md:text-sm text-white font-mono">חודש</th>
      //     </tr>
      //   </thead>
      //   <tbody className="divide-y divide-gray-200">
      //     {reports.map((report, index) => (
      //       <tr key={report.month} className={`border ${index % 2 === 0 ? 'bg-sky-100' : ''}`}>
      //       <td scope="col" className="px-1 text-center py-3 text-xs">{report.totalProfit}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-xs">{report.vat}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-xs">{report.profitTifuli}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-xs">{report.profitGolmi}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-green-600 font-semibold text-xs">{report.totalIncome}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-green-600 text-xs">{report.taxInvoices}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-green-600 text-xs">{report.income}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-red-600 font-semibold text-xs">{report.totaloutcome}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-red-600 text-xs">{report.salaries}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-red-600 text-xs">{report.changeableOutcome}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-red-600 text-xs">{report.permanentOutcome}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-red-600 text-xs">{report.supplierswaresoutcome}</td>
      //       <td scope="col" className="px-1 text-center py-3 text-xs font-bold text-blue-800">{report.month}</td>
      //       </tr>
      //     ))}
      //   </tbody>
      // </table>
      
       )}
    </div>
        </>
        )}

</section>
  )
}

export default YearlyReports